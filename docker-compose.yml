version: '3.9'
services:
  postgresdlc:
    container_name: postgresdlc
    image: postgres:12
    hostname: postgresdlc
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: changeme
      PGDATA: /data/postgres
    ports:
      - "5431:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  storageapi:
    container_name: storageapi
    hostname: storageapi
    build:
      context: .
      dockerfile: ./storage/Dockerfile
    environment:
      RUST_LOG: "info"
      DATABASE_URL: "postgresql://postgres:changeme@postgresdlc:5432/postgres"
      MIGRATE: "true"
    ports:
      - "8100:8100"
    entrypoint: "/app/storage-api"
    depends_on:
      postgresdlc:
        condition: service_healthy

  dlc-link-attestor-1:
    container_name: attestor-1
    hostname: attestor-1
    build:
      context: .
      dockerfile: ./attestor/Dockerfile
    ports:
      - 8801:8801
    environment:
      "BRANCH": "attestor-manager"
      "PORT": "8801"
      "DEV_ENDPOINTS_ENABLED": "true"
      "PRIVATE_KEY": "575bdf41f62ba26af51bc1a3a8672e3b4e6d0401bbe8649936ef41a5257f2544"
      "STORAGE_API_ENABLED": "true"
      "STORAGE_API_ENDPOINT": "http://storageapi:8100"
      "CHAIN_1": "${CHAIN_1:-STACKS_MOCKNET}"
      "VERSION_1": "${VERSION_1:-1}"
      "API_KEY_1": "${API_KEY_1:-abcdef1234567890}"
    # env_file:
    #   - ./attestor/observer/.env
    # volumes:
    #   - ./attestor/observer/src:/app/attestor/observer/src
    restart: on-failure
    depends_on:
      - storageapi

  dlc-link-attestor-2:
    container_name: attestor-2
    hostname: attestor-2
    build:
      context: .
      dockerfile: ./attestor/Dockerfile
    ports:
      - 8802:8802
    environment:
      "BRANCH": "attestor-manager"
      "PORT": "8802"
      "DEV_ENDPOINTS_ENABLED": "true"
      "PRIVATE_KEY": "12cc65bd6db57f1a53ed501d146ac0c74bef695286371979a80280a20d25cf4f"
      "STORAGE_API_ENABLED": "true"
      "STORAGE_API_ENDPOINT": "http://storageapi:8100"
      "CHAIN_1": "${CHAIN_1:-STACKS_MOCKNET}"
      "VERSION_1": "${VERSION_1:-1}"
      "API_KEY_1": "${API_KEY_1:-abcdef1234567890}"
    # env_file:
    #   - ./attestor/observer/.env
    # volumes:
    #   - ./attestor/observer/src:/app/attestor/observer/src
    restart: on-failure
    depends_on:
      - storageapi

  dlc-link-attestor-3:
    container_name: attestor-3
    hostname: attestor-3
    build:
      context: .
      dockerfile: ./attestor/Dockerfile
    ports:
      - 8803:8803
    environment:
      "BRANCH": "attestor-manager"
      "PORT": "8803"
      "DEV_ENDPOINTS_ENABLED": "true"
      "PRIVATE_KEY": "4cbf3a503ccabe3de3e8dbaa449fcf84b1f6f42c085d86030510ae00281000d4"
      "STORAGE_API_ENABLED": "true"
      "STORAGE_API_ENDPOINT": "http://storageapi:8100"
      "CHAIN_1": "${CHAIN_1:-STACKS_MOCKNET}"
      "VERSION_1": "${VERSION_1:-1}"
      "API_KEY_1": "${API_KEY_1:-abcdef1234567890}"
    # env_file:
    #   - ./attestor/observer/.env
    # volumes:
    #   - ./attestor/observer/src:/app/attestor/observer/src
    restart: on-failure
    depends_on:
      - storageapi

  blockchain-interface:
    container_name: blockchain-interface
    hostname: blockchain-interface
    build:
      context: .
      dockerfile: ./wallet-blockchain-interface/Dockerfile
    volumes:
      - ./wallet-blockchain-interface:/usr/src/app
    ports:
      - 3000:3000
    environment:
      - "PORT=3000"
      - "TEST_MODE_ENABLED=true"
    depends_on:
      - dlc-link-attestor-1
      - dlc-link-attestor-2
      - dlc-link-attestor-3
    restart: on-failure

  router-wallet:
    container_name: router-wallet
    hostname: router-wallet
    build:
      context: .
      dockerfile: ./wallet/Dockerfile
    volumes:
      - ./wallet:/usr/src/app
    ports:
      - 8085:8085
    environment:
      # For Internal DLC.Link Bitcoin Mocknet
      # - "ELECTRUM_API_URL=http://96.126.107.204:3002"
      - "ELECTRUM_API_URL=http://96.126.107.204:3002"
      # For Bitcoin Testnet
      # - "ELECTRUM_API_URL=https://blockstream.info/testnet/api"
      # For Bitcoin Mainnet
      # ELECTRUM_API_URL="https://blockstream.info/api"
      - "BITCOIN_CHECK_INTERVAL_SECONDS=10"
      - "BITCOIN_NETWORK=regtest"
      - "RUST_LOG=debug,dlc_protocol_wallet=debug"
      - "RUST_BACKTRACE=full"
      - "STORAGE_API_ENABLED=true"
      - "STORAGE_API_ENDPOINT=http://storageapi:8100"
      - "CONTRACT_CLEANUP_ENABLED=false"
      - "BLOCKCHAIN_INTERFACE_URL=http://blockchain-interface:3000"
      - "XPRIV=${XPRIV:-tprv8ZgxMBicQKsPf84Xd96WTXpNrc83cjkhcLsscPZkykkytiuTKdoKzspDnwQKtmtYAx86rFoDqXSxeY9Y6FRAJezYqb1pTzdGyVCr6hDhw9y}"
      - "FINGERPRINT=${FINGERPRINT:-28ed60b3}"
    depends_on:
        - postgresdlc
        - storageapi
        - blockchain-interface
    restart: on-failure
    healthcheck:
      test: curl --fail http://localhost:8085/info || exit 1
      interval: 3s
      timeout: 10s
      retries: 10
      start_period: 10s

  integration-test:
    profiles:
      - it
    container_name: integration-test
    hostname: integration-test
    build:
      context: .
      dockerfile: ./it/Dockerfile
    environment:
      - ENV=docker
      - HANDLE_ATTESTORS=true
      - SUCCESSFUL_ATTESTING=true
    volumes:
      - ./it:/app/it
    depends_on:
      router-wallet:
        condition: service_healthy
